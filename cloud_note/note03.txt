cn_user:用户表
cn_notebook:笔记本表
cn_note:笔记表
一个用户有多个笔记本
每个笔记本有多个笔记

系统采用无会话状态方式处理.不使用Session,
因为不适合服务器集群部署。
发送请求（带身份证+Cookie）-->服务器处理

#笔记本列表显示
##发送Ajax请求
-页面一出现自动发送请求onload
-请求参数为用户ID
-请求地址为/book/loadbooks.do

##服务器端处理
/book/loadbooks.do
-->DispatcherServlet
-->HanlderMapping
-->LoadBooksController.execute
-->BookService.loadUserBooks
-->BookDao-->cn_notebook(查询)
-->返回NoteResult结构的JSON数据

##Ajax回调处理
-success:解析JSON结果,循环生成笔记本li列表
-error:提示加载笔记列表失败

#点笔记本显示笔记列表
##发送Ajax请求
-笔记本li单击 onclick发送请求
-请求参数为笔记本ID
-请求地址为/note/loadnotes.do
 
##服务器端处理
/note/loadnotes.do
-->LoadNotesController.execute
-->NoteService.loadBookNotes
-->NoteDao-->cn_note(查询)
-->返回NoteResult结构的JSON结果

##Ajax回调处理
-success:解析JSON结果,循环生成笔记li列表
-error:提示加载笔记列表失败

========练习任务=========
任务一：完成今天讲过的笔记本列表和笔记列表功能
任务二：尝试重新编写之前讲过的部分功能，
       例如登录、注册、笔记列表或笔记本列表










